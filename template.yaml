AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: bluebird infrastructure

Parameters:
  DeploymentBucket:
    Type: String
    Description: The name of the S3 bucket in which packaged code is stored
  StageName:
    Type: String
    Description: Current Stage
    Default: dev

Globals:
  Function:
    Timeout: 3

Resources:
  BluebirdLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: bluebird-lambda-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
          Action:
            - sts:AssumeRole
      Policies:
        - PolicyName: bluebird-lambda-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*'
              - Effect: Allow
                Action:
                  - logs:*
                Resource: "arn:aws:logs:*:*:*"
              - Effect: Allow
                Action:
                  - dynamodb:DescribeTable
                  - dynamodb:UpdateTable
                  - dynamodb:DeleteItem
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                Resource:
                  - !GetAtt CollectionsTable.Arn

  BluebirdGatewayRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: bluebird-gateway-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - apigateway.amazonaws.com
          Action:
            - sts:AssumeRole
      Policies:
        - PolicyName: bluebird-gateway-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource: "arn:aws:logs:*:*:*"
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: "*"

  BluebirdAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: bluebird-api
      DefinitionUri: swaggerSpec.yaml
      StageName:
        Ref: StageName

  CollectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: bluebird-collections
      ProvisionedThroughput:
        ReadCapacityUnits: 7
        WriteCapacityUnits: 7
      AttributeDefinitions: 
        - 
          AttributeName: "collectionId"
          AttributeType: "S"
      KeySchema:
        - 
          AttributeName: "collectionId"
          KeyType: "HASH"

  GetCollection:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: bluebird-get-collection
      Runtime: nodejs8.10
      Handler: collections.get
      CodeUri: build
      Role: !GetAtt BluebirdLambdaRole.Arn
      Environment:
        Variables:
          COLLECTIONS_TABLE: !Ref CollectionsTable
      Events:
        GetCollectionAPI:
          Type: Api
          Properties:
            RestApiId: !Ref "BluebirdAPI"
            Path: /collection/{collectionId}
            Method: GET

  PutCollection:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: bluebird-put-collection
      Runtime: nodejs8.10
      Handler: collections.put
      CodeUri: build
      Role: !GetAtt BluebirdLambdaRole.Arn
      Environment:
        Variables:
          COLLECTIONS_TABLE: !Ref CollectionsTable
      Events:
        PutCollectionsAPI:
          Type: Api
          Properties:
            RestApiId: !Ref "BluebirdAPI"
            Path: /collection
            Method: PUT

  AddCards:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: bluebird-add-cards
      Runtime: nodejs8.10
      Handler: cards.post
      CodeUri: build
      Role: !GetAtt BluebirdLambdaRole.Arn
      Environment:
        Variables:
          COLLECTIONS_TABLE: !Ref CollectionsTable
      Events:
        PutCollectionsAPI:
          Type: Api
          Properties:
            RestApiId: !Ref "BluebirdAPI"
            Path: /cards
            Method: POST
